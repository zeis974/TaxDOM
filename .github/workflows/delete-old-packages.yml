name: Cleanup old GitHub Packages

# on:
#   schedule:
#     - cron: "0 0 1 * *"

on:  
  push:
  pull_request:
    branches:
      - chore/rework-clean-package

jobs:
  cleanup-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - taxdom-web
          - taxdom-api

    steps:
      - name: Lister toutes les versions de ${{ matrix.package }}
        id: list-versions
        run: |
          echo "Récupération des IDs pour ${{ matrix.package }}"
          # Initialise
          > all_ids.txt

          # Récupère toutes les versions (pagination automatique)
          gh api \
            --paginate \
            /user/packages/container/${{ github.actor }}/${{ matrix.package }}/versions \
            --jq '.[].id' >> all_ids.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sélectionner les 10 versions les plus récentes
        id: keep-versions
        run: |
          gh api \
            /user/packages/container/${{ github.actor }}/${{ matrix.package }}/versions \
            -f per_page=10 \
            --jq '.[].id' > keep_ids.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Supprimer les anciennes versions
        run: |
          grep -vxFf keep_ids.txt all_ids.txt > delete_ids.txt || true
          if [ -s delete_ids.txt ]; then
            while read -r version_id; do
              echo "Suppression de la version $version_id de ${{ matrix.package }}"
              gh api \
                --method DELETE \
                /user/packages/container/${{ github.actor }}/${{ matrix.package }}/versions/$version_id \
                -H "Accept: application/vnd.github+json"
            done < delete_ids.txt
          else
            echo "Aucune ancienne version à supprimer pour ${{ matrix.package }}"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
